/* Page controller */

var fs = require('fs'),
    path = require('path'),
    db = require('mariadb'),
    urlencode = require('urlencode'),
    session = require('./session'),
    error = require('../lib/erroron')

exports.page = function (req, res, next) {
    var title = urlencode(urlencode.decode(req.path.slice(1)))

    __loaddata(title, (e, data) => {
	if (e) {
	    next(e)
	} else {
    	    res.render(
		'page',
		{
		    token: req.session.token,
		    user: session.user(req),
		    title: urlencode.decode(title),
		    content: data.content,
		    time: data.time,
		    cache: true
		},
		(e, data) => {
		    if (e) {
			next(e)
		    } else {
			res.set('Content-Type', 'text/html')
			res.set('Cache-Control', 'no-cache')
			res.set('Pragma', 'no-cache')
			res.set('Expires', '0')

			res.status(200).send(data)
			console.log(`\nHTTP/${req.httpVersion} ${res.statusCode} ${res.statusMessage}\n${req.method} ${req.originalUrl}`)
		    }
		}
	    )
	}
    })
}

function __loaddata (title, call) {
    var o = {},
	pool = db.createPool({
	    host: 'localhost',
	    user: 'e',
	    password: 'e',
	    connectionLimit: 5
	})

    pool.getConnection()
	.then(conn => {
	    conn.query(`select title, content, time from site.post where title = ? group by title`, [title])
		.then(res => {
		    var e
		    if (res.length) {
			for (var _e in res[0]) {
			    o[_e] = res[0][_e]
			}			
		    } else {
			e = error.new(404, { redirect: true })
		    }

		    call.call({}, e, o)
		})
		.then(() => {
		    conn.end()
		})
		.catch(e => {
		    console.error(`\nDB query: ${e}`)
		    conn.end()
		})
	})
	.catch(e => {
	    console.error(`\nDB conn: ${e.description}`)
	})
}
